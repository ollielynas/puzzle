[package]
name = "puzzle"
version = "0.1.1"
edition = "2021"
wasm-opt = false

[package.metadata.wasm-pack]
# Should `wasm-opt` be used to further optimize the wasm binary generated after
# the Rust compiler has finished? Using `wasm-opt` can often further decrease
# binary size or do clever tricks that haven't made their way into LLVM yet.
#
# Configuration is set to `false` by default for the dev profile, but it can
# be set to an array of strings which are explicit arguments to pass to
# `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# would execute very expensive optimizations passes
wasm-opt = false

[lib]
wasm-opt = false
crate-type = ["cdylib", "rlib"]

[dependencies]
bresenham = "0.1.1"
chrono ={version= "0.4.38", features=["wasmbind", "now"]}
fastrand = "2.2.0"
itertools = "0.13.0"
# number-theory = "0.0.24"
rayon = "1.10.0"
resvg = "0.44.0"
strum = "0.26.3"
strum_macros = "0.26.4"
wasm-bindgen = "0.2.97"
wasm-bindgen-rayon = "1.2.2"
wasm-timer = "0.2.5"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
epub-builder = "0.7.4"

[profile.release]
strip = true 
opt-level = "z"
